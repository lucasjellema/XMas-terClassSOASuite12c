<?xml version = '1.0' encoding = 'UTF-8'?>
<!--Generated by Oracle SOA Modeler version 12.1.3.0.0 at [11-12-14 14:40].-->
<Mediator name="CaseMediator" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.oracle.com/sca/1.0/mediator"
          wsdlTargetNamespace="http://xmlns.amis.nl/edesk/webformservice" xmlns:ns0="http://xmlns.amis.nl/edesk/common"
          xmlns:fmr="http://xmlns.amis.nl/edesk/frm/0200"
          xmlns:ns1="http://xmlns.amis.nl/services/caseservice/properties"
          xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20">
  <operation name="RegisterForm" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
    <translate name="properties" type="TranslateFromNative"
               input="$in.payload/fmr:FormRequest/ns0:intakeDetails/ns0:propertyValues"
               output="$translateFromNative.out.properties" nxsd="../Schemas/propertyValues.xsd"
               rootElemName="ns1:Properties"/>
    <switch>
      <case executionType="sequential" name="echo.RegisterForm" defaultRule="true">
        <action>
          <transform>
            <part name="$out.payload" function="xslt(../Transformations/FormRequest_To_FormAnswer.xsl, $in.payload)"/>
          </transform>
          <echo/>
        </action>
      </case>
      <case executionType="sequential" name="RegisterFormProcess.FormService.RegisterForm">
        <condition language="xpath">
          <expression>$translateFromNative.out.properties/ns1:Properties/ns1:Host = "web.amis.nl"</expression>
        </condition>
        <action>
          <transform/>
          <assign>
            <copy expression="med:setCompositeInstanceTitle(concat(&quot;RegisterForm by user '&quot;,$translateFromNative.out.properties/ns4:Properties/ns4:User, &quot;'&quot;))"
                  target="$out.property.tracking.compositeInstanceTitle"
                  xmlns:ns4="http://xmlns.amis.nl/services/caseservice/properties"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath"/>
          </assign>
          <invoke reference="RegisterFormProcess.FormService" operation="RegisterForm">
            <onReply>
              <transform>
                <part name="$out.payload"
                      function="xqueryt(../Transformations/FormAnswer_To_FormAnswer.xqy,$in.payload)"/>
              </transform>
              <reply/>
            </onReply>
            <onFault type="fault">
              <fault type="fault"/>
            </onFault>
          </invoke>
        </action>
      </case>
    </switch>
  </operation>
  <operation name="RegisterFormAsync" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
    <switch>
      <case executionType="sequential" name="RegisterFormAsyncProcess.FormService.RegisterFormAsync">
        <action>
          <dvm location="../DVM/CaseMediator_overrides.dvm" sourceColumnName="key"
               sourceValueExpression="xp20:lower-case($in.payload/fmr:FormRequest/ns0:messageDetails/ns0:sender/ns0:organisation)">
            <dynamicParam name="condition" value="Filter"/>
            <dynamicParam name="executionType" value="Execution"/>
            <dynamicParam name="validateSchema" value="Syntax"/>
            <dynamicParam name="schematron" value="Semantic"/>
            <dynamicParam name="transform" value="Transform"/>
            <dynamicParam name="assign" value="Assign"/>
            <dynamicParam name="operation" value="Operation"/>
          </dvm>
          <validate part="$in.payload">
            <schematron>../Schematron/GeneralValidation.sch</schematron>
          </validate>
          <assign>
            <copy expression="med:setCompositeInstanceTitle(concat(&quot;RegisterFormAsync by organisation '&quot;, $in.payload/fmr:FormRequest/ns0:messageDetails/ns0:sender/ns0:organisation, &quot;'&quot;))"
                  target="$out.property.tracking.compositeInstanceTitle" xmlns:ns0="http://xmlns.amis.nl/edesk/common"
                  xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:fmr="http://xmlns.amis.nl/edesk/frm/0200"/>
          </assign>
          <invoke reference="RegisterFormAsyncProcess.FormService" operation="RegisterFormAsync"/>
        </action>
      </case>
    </switch>
  </operation>
</Mediator>
