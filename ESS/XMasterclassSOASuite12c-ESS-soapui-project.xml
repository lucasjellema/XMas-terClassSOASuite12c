<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="XMasterclassSOASuite12c_ESS" resourceRoot="" soapui-version="5.0.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="200508" name="ESSWebServiceSoapHttp" type="wsdl" bindingName="{http://xmlns.oracle.com/scheduler}ESSWebServiceSoapHttp" soapVersion="1_1" anonymous="optional" definition="http://soa2admin2.example.com:7001/ess/esswebservice?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint></con:endpoints><con:operation isOneWay="false" action="addPPActions" name="addPPActions" bindingOperationName="addPPActions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler" xmlns:typ="http://xmlns.oracle.com/scheduler/types">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:addPPActions>
         <sch:requestParameters>
            <!--0 to 1000 repetitions:-->
            <typ:parameter>
               <!--Optional:-->
               <typ:dataType>?</typ:dataType>
               <!--Optional:-->
               <typ:name>?</typ:name>
               <!--Optional:-->
               <typ:scope>?</typ:scope>
               <!--Optional:-->
               <typ:value>?</typ:value>
            </typ:parameter>
         </sch:requestParameters>
         <!--0 to 100 repetitions:-->
         <sch:postProcessActions>
            <!--Optional:-->
            <typ:actionName>?</typ:actionName>
            <typ:actionOrder>?</typ:actionOrder>
            <!--0 to 100 repetitions:-->
            <typ:arguments>?</typ:arguments>
            <!--Optional:-->
            <typ:fileMgmtGroup>?</typ:fileMgmtGroup>
            <!--Optional:-->
            <typ:description>?</typ:description>
            <typ:onError>?</typ:onError>
            <typ:onSuccess>?</typ:onSuccess>
            <typ:onWarning>?</typ:onWarning>
         </sch:postProcessActions>
      </sch:addPPActions>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="addPPActions"/></con:call></con:operation><con:operation isOneWay="false" action="cancelRequest" name="cancelRequest" bindingOperationName="cancelRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:cancelRequest>
         <sch:requestId>?</sch:requestId>
      </sch:cancelRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="cancelRequest"/></con:call></con:operation><con:operation isOneWay="false" action="deleteRequest" name="deleteRequest" bindingOperationName="deleteRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:deleteRequest>
         <sch:requestId>?</sch:requestId>
      </sch:deleteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="deleteRequest"/></con:call></con:operation><con:operation isOneWay="false" action="getCompletionStatus" name="getCompletionStatus" bindingOperationName="getCompletionStatus" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getCompletionStatus>
         <sch:requestId>?</sch:requestId>
      </sch:getCompletionStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getCompletionStatus"/></con:call></con:operation><con:operation isOneWay="false" action="getRequestDetail" name="getRequestDetail" bindingOperationName="getRequestDetail" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getRequestDetail>
         <sch:requestId>?</sch:requestId>
      </sch:getRequestDetail>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getRequestDetail"/></con:call></con:operation><con:operation isOneWay="false" action="getRequestExecutionContext" name="getRequestExecutionContext" bindingOperationName="getRequestExecutionContext" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getRequestExecutionContext>
         <sch:requestExecutionContext>?</sch:requestExecutionContext>
      </sch:getRequestExecutionContext>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getRequestExecutionContext"/></con:call></con:operation><con:operation isOneWay="false" action="getRequestState" name="getRequestState" bindingOperationName="getRequestState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:getRequestState>
         <sch:requestId>?</sch:requestId>
      </sch:getRequestState>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getRequestState"/></con:call></con:operation><con:operation isOneWay="false" action="holdRequest" name="holdRequest" bindingOperationName="holdRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:holdRequest>
         <sch:requestId>?</sch:requestId>
      </sch:holdRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="holdRequest"/></con:call></con:operation><con:operation isOneWay="false" action="purgeRequest" name="purgeRequest" bindingOperationName="purgeRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:purgeRequest>
         <sch:requestId>?</sch:requestId>
      </sch:purgeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="purgeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="releaseRequest" name="releaseRequest" bindingOperationName="releaseRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:releaseRequest>
         <sch:requestId>?</sch:requestId>
      </sch:releaseRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="releaseRequest"/></con:call></con:operation><con:operation isOneWay="false" action="setAsyncRequestStatus" name="setAsyncRequestStatus" bindingOperationName="setAsyncRequestStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:setAsyncRequestStatus>
         <sch:requestExecutionContext>?</sch:requestExecutionContext>
         <sch:status>?</sch:status>
         <!--Optional:-->
         <sch:statusMessage>?</sch:statusMessage>
      </sch:setAsyncRequestStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="setAsyncRequestStatus"/></con:call></con:operation><con:operation isOneWay="false" action="setNLSOptions" name="setNLSOptions" bindingOperationName="setNLSOptions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler" xmlns:typ="http://xmlns.oracle.com/scheduler/types">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:setNLSOptions>
         <sch:requestParameters>
            <!--0 to 1000 repetitions:-->
            <typ:parameter>
               <!--Optional:-->
               <typ:dataType>?</typ:dataType>
               <!--Optional:-->
               <typ:name>?</typ:name>
               <!--Optional:-->
               <typ:scope>?</typ:scope>
               <!--Optional:-->
               <typ:value>?</typ:value>
            </typ:parameter>
         </sch:requestParameters>
         <sch:nlsOptions>
            <!--Optional:-->
            <typ:language>?</typ:language>
            <!--Optional:-->
            <typ:numericCharacters>?</typ:numericCharacters>
            <!--Optional:-->
            <typ:territory>?</typ:territory>
         </sch:nlsOptions>
      </sch:setNLSOptions>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="setNLSOptions"/></con:call></con:operation><con:operation isOneWay="false" action="setStepsArgs" name="setStepsArgs" bindingOperationName="setStepsArgs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler" xmlns:typ="http://xmlns.oracle.com/scheduler/types">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:setStepsArgs>
         <sch:requestParameters>
            <!--0 to 1000 repetitions:-->
            <typ:parameter>
               <!--Optional:-->
               <typ:dataType>?</typ:dataType>
               <!--Optional:-->
               <typ:name>?</typ:name>
               <!--Optional:-->
               <typ:scope>?</typ:scope>
               <!--Optional:-->
               <typ:value>?</typ:value>
            </typ:parameter>
         </sch:requestParameters>
         <!--0 to 100 repetitions:-->
         <sch:stepArgsList>
            <!--0 to 100 repetitions:-->
            <typ:arguments>?</typ:arguments>
            <!--Optional:-->
            <typ:NLSOptions>
               <!--Optional:-->
               <typ:language>?</typ:language>
               <!--Optional:-->
               <typ:numericCharacters>?</typ:numericCharacters>
               <!--Optional:-->
               <typ:territory>?</typ:territory>
            </typ:NLSOptions>
            <!--0 to 100 repetitions:-->
            <typ:PPActions>
               <!--Optional:-->
               <typ:actionName>?</typ:actionName>
               <typ:actionOrder>?</typ:actionOrder>
               <!--0 to 100 repetitions:-->
               <typ:arguments>?</typ:arguments>
               <!--Optional:-->
               <typ:fileMgmtGroup>?</typ:fileMgmtGroup>
               <!--Optional:-->
               <typ:description>?</typ:description>
               <typ:onError>?</typ:onError>
               <typ:onSuccess>?</typ:onSuccess>
               <typ:onWarning>?</typ:onWarning>
            </typ:PPActions>
            <!--Optional:-->
            <typ:stepPath>?</typ:stepPath>
         </sch:stepArgsList>
      </sch:setStepsArgs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="setStepsArgs"/></con:call></con:operation><con:operation isOneWay="false" action="setSubmitArgs" name="setSubmitArgs" bindingOperationName="setSubmitArgs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler" xmlns:typ="http://xmlns.oracle.com/scheduler/types">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:setSubmitArgs>
         <sch:requestParameters>
            <!--0 to 1000 repetitions:-->
            <typ:parameter>
               <!--Optional:-->
               <typ:dataType>?</typ:dataType>
               <!--Optional:-->
               <typ:name>?</typ:name>
               <!--Optional:-->
               <typ:scope>?</typ:scope>
               <!--Optional:-->
               <typ:value>?</typ:value>
            </typ:parameter>
         </sch:requestParameters>
         <!--0 to 100 repetitions:-->
         <sch:arguments>?</sch:arguments>
      </sch:setSubmitArgs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="setSubmitArgs"/></con:call></con:operation><con:operation isOneWay="false" action="submitRecurringRequest" name="submitRecurringRequest" bindingOperationName="submitRecurringRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:7001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler" xmlns:typ="http://xmlns.oracle.com/scheduler/types">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:submitRecurringRequest>
         <sch:description>?</sch:description>
         <sch:jobDefinitionId>
            <!--Optional:-->
            <typ:name>?</typ:name>
            <!--Optional:-->
            <typ:packageName>?</typ:packageName>
            <!--Optional:-->
            <typ:type>?</typ:type>
         </sch:jobDefinitionId>
         <sch:scheduleId>
            <!--Optional:-->
            <typ:name>?</typ:name>
            <!--Optional:-->
            <typ:packageName>?</typ:packageName>
            <!--Optional:-->
            <typ:type>?</typ:type>
         </sch:scheduleId>
         <sch:triggerId>
            <!--Optional:-->
            <typ:name>?</typ:name>
            <!--Optional:-->
            <typ:packageName>?</typ:packageName>
            <!--Optional:-->
            <typ:type>?</typ:type>
         </sch:triggerId>
         <sch:application>?</sch:application>
         <sch:requestedStartTime>?</sch:requestedStartTime>
         <sch:requestedEndTime>?</sch:requestedEndTime>
         <sch:requestParameters>
            <!--0 to 1000 repetitions:-->
            <typ:parameter>
               <!--Optional:-->
               <typ:dataType>?</typ:dataType>
               <!--Optional:-->
               <typ:name>?</typ:name>
               <!--Optional:-->
               <typ:scope>?</typ:scope>
               <!--Optional:-->
               <typ:value>?</typ:value>
            </typ:parameter>
         </sch:requestParameters>
      </sch:submitRecurringRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="submitRecurringRequest"/></con:call></con:operation><con:operation isOneWay="false" action="submitRequest" name="submitRequest" bindingOperationName="submitRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://soa2admin2.example.com:8001/ess/esswebservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:sch="http://xmlns.oracle.com/scheduler" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://xmlns.oracle.com/scheduler/types">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-E26249A1E7E04CDCEA14186630154291">
            <wsse:Username>weblogic</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">weblogic1</wsse:Password>
            <wsse:Nonce EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary">N5B7OQdbK0VyRR6n1jN+tA==</wsse:Nonce>
            <wsu:Created>2014-12-15T17:03:35.424Z</wsu:Created>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <sch:submitRequest>
         <sch:description>Scheduled through WS call from SoapUI</sch:description>
         <sch:jobDefinitionId>
            <!--Optional:-->
            <typ:name>InvokeSomeService</typ:name>
            <!--Optional:-->
            <typ:packageName>/oracle/apps/ess/custom/XMasterClass/housekeeping</typ:packageName>
            <!--Optional:-->
            <typ:type>JOB_DEFINITION</typ:type>
         </sch:jobDefinitionId>
         <sch:application>EssNativeHostingApp</sch:application>
         <sch:requestedStartTime></sch:requestedStartTime>
         <sch:requestParameters>
            <!--0 to 1000 repetitions:-->
            <typ:parameter>
               <!--Optional:-->
               <typ:dataType>STRING</typ:dataType>
               <!--Optional:-->
               <typ:name>InputForSomeService</typ:name>
               <typ:value>MyParamValue</typ:value>
            </typ:parameter>
         </sch:requestParameters>
      </sch:submitRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>weblogic</con:username><con:password>weblogic1</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="submitRequest" generateMessageId="true"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="200508" name="ESSWebServiceCallbackSoapHttp" type="wsdl" bindingName="{http://xmlns.oracle.com/scheduler}ESSWebServiceCallbackSoapHttp" soapVersion="1_1" anonymous="optional" definition="http://soa2admin2.example.com:7001/ess/esswebservice?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://soa2admin2.example.com:7001/ess/esswebservice?wsdl"><con:part><con:url>http://soa2admin2.example.com:7001/ess/esswebservice?wsdl</con:url><con:content><![CDATA[<definitions name="ESSWebService" targetNamespace="http://xmlns.oracle.com/scheduler" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://xmlns.oracle.com/scheduler" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsp:Policy wsu:Id="wsaddr_policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy">
    <wsaw:UsingAddressing xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"/>
  </wsp:Policy>
  <wsp:Policy wsu:Id="wss_username_token_service_policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <sp:SupportingTokens xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:WssUsernameToken10/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
  <import namespace="http://xmlns.oracle.com/scheduler" location="http://soa2admin2.example.com:7001/ess/esswebservice?WSDL=ESSWebServiceAbstract.wsdl"/>
  <binding name="ESSWebServiceCallbackSoapHttp" type="tns:ESSWebServiceCallback" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsaw:UsingAddressing wsdl:required="true"/>
    <operation name="onJobCompletion">
      <soap:operation soapAction="onJobCompletion"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <binding name="ESSWebServiceSoapHttp" type="tns:ESSWebService" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsaw:UsingAddressing wsdl:required="true"/>
    <wsp:PolicyReference URI="#wss_username_token_service_policy" wsdl:required="false" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
    <wsp:PolicyReference URI="#wsaddr_policy" wsdl:required="false" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"/>
    <operation name="submitRequest">
      <soap:operation soapAction="submitRequest"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ValidationException">
        <soap:fault name="ValidationException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="submitRecurringRequest">
      <soap:operation soapAction="submitRecurringRequest"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ValidationException">
        <soap:fault name="ValidationException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="getCompletionStatus">
      <soap:operation soapAction="getCompletionStatus"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="getRequestState">
      <soap:operation soapAction="getRequestState"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="getRequestDetail">
      <soap:operation soapAction="getRequestDetail"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="getRequestExecutionContext">
      <soap:operation soapAction="getRequestExecutionContext"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="holdRequest">
      <soap:operation soapAction="holdRequest"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="NotAllowedException">
        <soap:fault name="NotAllowedException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="IllegalStateException">
        <soap:fault name="IllegalStateException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="releaseRequest">
      <soap:operation soapAction="releaseRequest"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="IllegalStateException">
        <soap:fault name="IllegalStateException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="setAsyncRequestStatus">
      <soap:operation soapAction="setAsyncRequestStatus"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="RequestNotFoundException">
        <soap:fault name="RequestNotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="cancelRequest">
      <soap:operation soapAction="cancelRequest"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="IllegalStateException">
        <soap:fault name="IllegalStateException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="deleteRequest">
      <soap:operation soapAction="deleteRequest"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="NotAllowedException">
        <soap:fault name="NotAllowedException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="IllegalStateException">
        <soap:fault name="IllegalStateException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="purgeRequest">
      <soap:operation soapAction="purgeRequest"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="NotAllowedException">
        <soap:fault name="NotAllowedException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="NotFoundException">
        <soap:fault name="NotFoundException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="IllegalStateException">
        <soap:fault name="IllegalStateException" use="literal" encodingStyle=""/>
      </fault>
      <fault name="RuntimeServiceException">
        <soap:fault name="RuntimeServiceException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="setSubmitArgs">
      <soap:operation soapAction="setSubmitArgs"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="IllegalArgumentException">
        <soap:fault name="IllegalArgumentException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="setStepsArgs">
      <soap:operation soapAction="setStepsArgs"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="IllegalArgumentException">
        <soap:fault name="IllegalArgumentException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="addPPActions">
      <soap:operation soapAction="addPPActions"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="IllegalArgumentException">
        <soap:fault name="IllegalArgumentException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
    <operation name="setNLSOptions">
      <soap:operation soapAction="setNLSOptions"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="IllegalArgumentException">
        <soap:fault name="IllegalArgumentException" use="literal" encodingStyle=""/>
      </fault>
    </operation>
  </binding>
  <service name="ESSWebService">
    <port name="SchedulerServiceImplPort" binding="tns:ESSWebServiceSoapHttp">
      <soap:address location="http://soa2admin2.example.com:7001/ess/esswebservice"/>
    </port>
  </service>
  <service name="ESSWebServiceCallback">
    <port name="callbackPort" binding="tns:ESSWebServiceCallbackSoapHttp">
      <soap:address location="REPLACE_WITH_ACTUAL_URL"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://soa2admin2.example.com:7001/ess/esswebservice?WSDL=ESSWebServiceAbstract.wsdl</con:url><con:content><![CDATA[<definitions name="ESSWebService" targetNamespace="http://xmlns.oracle.com/scheduler" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://xmlns.oracle.com/scheduler" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <types>
    <schema targetNamespace="http://xmlns.oracle.com/scheduler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://xmlns.oracle.com/scheduler/types">
      <import namespace="http://xmlns.oracle.com/scheduler/types" schemaLocation="http://soa2admin2.example.com:7001/ess/esswebservice?XSD=ESSTypes.xsd"/>
      <xsd:complexType name="submitRequest">
        <xsd:sequence>
          <xsd:element name="description" type="xsd:string" form="qualified"/>
          <xsd:element name="jobDefinitionId" type="ns1:metadataObjectId" form="qualified"/>
          <xsd:element name="application" type="xsd:string" form="qualified"/>
          <xsd:element name="requestedStartTime" type="xsd:dateTime" form="qualified"/>
          <xsd:element name="requestParameters" type="ns1:requestParameters" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="submitRequest" type="tns:submitRequest"/>
      <xsd:complexType name="submitRequestResponse">
        <xsd:sequence>
          <xsd:element name="requestId" type="xsd:long"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="submitRequestResponse" type="tns:submitRequestResponse"/>
      <xsd:complexType name="submitRecurringRequest">
        <xsd:sequence>
          <xsd:element name="description" type="xsd:string" form="qualified"/>
          <xsd:element name="jobDefinitionId" type="ns1:metadataObjectId" form="qualified"/>
          <xsd:element name="scheduleId" type="ns1:metadataObjectId" form="qualified"/>
          <xsd:element name="triggerId" type="ns1:metadataObjectId" form="qualified"/>
          <xsd:element name="application" type="xsd:string" form="qualified"/>
          <xsd:element name="requestedStartTime" type="xsd:dateTime" form="qualified"/>
          <xsd:element name="requestedEndTime" type="xsd:dateTime" form="qualified"/>
          <xsd:element name="requestParameters" type="ns1:requestParameters" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="submitRecurringRequest" type="tns:submitRecurringRequest"/>
      <xsd:complexType name="submitRecurringRequestResponse">
        <xsd:sequence>
          <xsd:element name="requestId" type="xsd:long"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="submitRecurringRequestResponse" type="tns:submitRecurringRequestResponse"/>
      <xsd:complexType name="getCompletionStatus">
        <xsd:sequence>
          <xsd:element name="requestId" type="xsd:long" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getCompletionStatus" type="tns:getCompletionStatus"/>
      <xsd:complexType name="onJobCompletion">
        <xsd:sequence>
          <xsd:element name="requestId" type="xsd:long"/>
          <xsd:element name="state" type="ns1:state" minOccurs="0"/>
          <xsd:element name="resultMessage" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="onJobCompletion" type="tns:onJobCompletion"/>
      <xsd:complexType name="getRequestState">
        <xsd:sequence>
          <xsd:element name="requestId" type="xsd:long" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getRequestState" type="tns:getRequestState"/>
      <xsd:complexType name="getRequestStateResponse">
        <xsd:sequence>
          <xsd:element name="state" type="ns1:state"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getRequestStateResponse" type="tns:getRequestStateResponse"/>
      <xsd:complexType name="getRequestDetail">
        <xsd:sequence>
          <xsd:element name="requestId" form="qualified" type="xsd:long"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getRequestDetail" type="tns:getRequestDetail"/>
      <xsd:complexType name="getRequestDetailResponse">
        <xsd:sequence>
          <xsd:element name="requestDetail" type="ns1:requestDetail"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getRequestDetailResponse" type="tns:getRequestDetailResponse"/>
      <xsd:complexType name="getRequestExecutionContext">
        <xsd:sequence>
          <xsd:element name="requestExecutionContext" type="xsd:string" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getRequestExecutionContext" type="tns:getRequestExecutionContext"/>
      <xsd:complexType name="getRequestExecutionContextResponse">
        <xsd:sequence>
          <xsd:element name="requestExecutionContext" type="ns1:requestExecutionContext"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getRequestExecutionContextResponse" type="tns:getRequestExecutionContextResponse"/>
      <xsd:complexType name="holdRequest">
        <xsd:sequence>
          <xsd:element name="requestId" form="qualified" type="xsd:long"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="holdRequest" type="tns:holdRequest"/>
      <xsd:complexType name="holdRequestResponse">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:element name="holdRequestResponse" type="tns:holdRequestResponse"/>
      <xsd:complexType name="releaseRequest">
        <xsd:sequence>
          <xsd:element name="requestId" form="qualified" type="xsd:long"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="releaseRequest" type="tns:releaseRequest"/>
      <xsd:complexType name="releaseRequestResponse">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:element name="releaseRequestResponse" type="tns:releaseRequestResponse"/>
      <xsd:complexType name="setAsyncRequestStatus">
        <xsd:sequence>
          <xsd:element name="requestExecutionContext" type="xsd:string" form="qualified"/>
          <xsd:element name="status" form="qualified" type="ns1:asyncStatus"/>
          <xsd:element name="statusMessage" type="xsd:string" minOccurs="0" maxOccurs="1" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setAsyncRequestStatus" type="tns:setAsyncRequestStatus"/>
      <xsd:complexType name="setAsyncRequestStatusResponse">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:element name="setAsyncRequestStatusResponse" type="tns:setAsyncRequestStatusResponse"/>
      <xsd:complexType name="cancelRequest">
        <xsd:sequence>
          <xsd:element name="requestId" type="xsd:long" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="cancelRequest" type="tns:cancelRequest"/>
      <xsd:complexType name="cancelRequestResponse">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:element name="cancelRequestResponse" type="tns:cancelRequestResponse"/>
      <xsd:complexType name="deleteRequest">
        <xsd:sequence>
          <xsd:element name="requestId" form="qualified" type="xsd:long"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="deleteRequest" type="tns:deleteRequest"/>
      <xsd:complexType name="deleteRequestResponse">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:element name="deleteRequestResponse" type="tns:deleteRequestResponse"/>
      <xsd:complexType name="purgeRequest">
        <xsd:sequence>
          <xsd:element name="requestId" form="qualified" type="xsd:long"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="purgeRequest" type="tns:purgeRequest"/>
      <xsd:complexType name="purgeRequestResponse">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:element name="purgeRequestResponse" type="tns:purgeRequestResponse"/>
      <xsd:complexType name="setSubmitArgs">
        <xsd:sequence>
          <xsd:element name="requestParameters" type="ns1:requestParameters" form="qualified"/>
          <xsd:element name="arguments" minOccurs="0" maxOccurs="100" type="xsd:string" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setSubmitArgs" type="tns:setSubmitArgs"/>
      <xsd:complexType name="setSubmitArgsResponse">
        <xsd:sequence>
          <xsd:element name="requestParametersReturn" type="ns1:requestParameters"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setSubmitArgsResponse" type="tns:setSubmitArgsResponse"/>
      <xsd:complexType name="setStepsArgs">
        <xsd:sequence>
          <xsd:element name="requestParameters" type="ns1:requestParameters" form="qualified"/>
          <xsd:element name="stepArgsList" minOccurs="0" maxOccurs="100" form="qualified" type="ns1:stepArgs"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setStepsArgs" type="tns:setStepsArgs"/>
      <xsd:complexType name="setStepsArgsResponse">
        <xsd:sequence>
          <xsd:element name="requestParametersReturn" type="ns1:requestParameters"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setStepsArgsResponse" type="tns:setStepsArgsResponse"/>
      <xsd:complexType name="addPPActions">
        <xsd:sequence>
          <xsd:element name="requestParameters" type="ns1:requestParameters" form="qualified"/>
          <xsd:element name="postProcessActions" minOccurs="0" maxOccurs="100" type="ns1:postProcessAction" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="addPPActions" type="tns:addPPActions"/>
      <xsd:complexType name="addPPActionsResponse">
        <xsd:sequence>
          <xsd:element name="requestParametersReturn" type="ns1:requestParameters"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="addPPActionsResponse" type="tns:addPPActionsResponse"/>
      <xsd:complexType name="setNLSOptions">
        <xsd:sequence>
          <xsd:element name="requestParameters" type="ns1:requestParameters" form="qualified"/>
          <xsd:element name="nlsOptions" type="ns1:nlsOptions" form="qualified"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setNLSOptions" type="tns:setNLSOptions"/>
      <xsd:complexType name="setNLSOptionsResponse">
        <xsd:sequence>
          <xsd:element name="requestParametersReturn" type="ns1:requestParameters"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="setNLSOptionsResponse" type="tns:setNLSOptionsResponse"/>
      <xsd:complexType name="IllegalStateException">
        <xsd:sequence>
          <xsd:element name="Message" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="IllegalStateException" type="tns:IllegalStateException"/>
      <xsd:complexType name="RuntimeServiceException">
        <xsd:sequence>
          <xsd:element name="Message" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="RuntimeServiceException" type="tns:RuntimeServiceException"/>
      <xsd:complexType name="IllegalArgumentException">
        <xsd:sequence>
          <xsd:element name="Message" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="IllegalArgumentException" type="tns:IllegalArgumentException"/>
      <xsd:complexType name="ValidationException">
        <xsd:sequence>
          <xsd:element name="Message" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ValidationException" type="tns:ValidationException"/>
      <xsd:complexType name="NotAllowedException">
        <xsd:sequence>
          <xsd:element name="Message" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="NotAllowedException" type="tns:NotAllowedException"/>
      <xsd:complexType name="NotFoundException">
        <xsd:sequence>
          <xsd:element name="Message" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="NotFoundException" type="tns:NotFoundException"/>
      <xsd:complexType name="RequestNotFoundException">
        <xsd:sequence>
          <xsd:element name="Message" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="RequestNotFoundException" type="tns:RequestNotFoundException"/>
    </schema>
  </types>
  <message name="submitRequestInput">
    <part name="parameters" element="tns:submitRequest"/>
  </message>
  <message name="submitRequestOutput">
    <part name="parameters" element="tns:submitRequestResponse"/>
  </message>
  <message name="ValidationException">
    <part name="ValidationException" element="tns:ValidationException"/>
  </message>
  <message name="NotFoundException">
    <part name="NotFoundException" element="tns:NotFoundException"/>
  </message>
  <message name="RuntimeServiceException">
    <part name="RuntimeServiceException" element="tns:RuntimeServiceException"/>
  </message>
  <message name="submitRecurringRequestInput">
    <part name="parameters" element="tns:submitRecurringRequest"/>
  </message>
  <message name="submitRecurringRequestOutput">
    <part name="parameters" element="tns:submitRecurringRequestResponse"/>
  </message>
  <message name="getCompletionStatusInput">
    <part name="parameters" element="tns:getCompletionStatus"/>
  </message>
  <message name="getRequestStateInput">
    <part name="parameters" element="tns:getRequestState"/>
  </message>
  <message name="getRequestStateOutput">
    <part name="parameters" element="tns:getRequestStateResponse"/>
  </message>
  <message name="getRequestDetailInput">
    <part name="parameters" element="tns:getRequestDetail"/>
  </message>
  <message name="getRequestDetailOutput">
    <part name="parameters" element="tns:getRequestDetailResponse"/>
  </message>
  <message name="getRequestExecutionContextInput">
    <part name="parameters" element="tns:getRequestExecutionContext"/>
  </message>
  <message name="getRequestExecutionContextOutput">
    <part name="parameters" element="tns:getRequestExecutionContextResponse"/>
  </message>
  <message name="holdRequestInput">
    <part name="parameters" element="tns:holdRequest"/>
  </message>
  <message name="holdRequestOutput">
    <part name="parameters" element="tns:holdRequestResponse"/>
  </message>
  <message name="NotAllowedException">
    <part name="NotAllowedException" element="tns:NotAllowedException"/>
  </message>
  <message name="IllegalStateException">
    <part name="IllegalStateException" element="tns:IllegalStateException"/>
  </message>
  <message name="releaseRequestInput">
    <part name="parameters" element="tns:releaseRequest"/>
  </message>
  <message name="releaseRequestOutput">
    <part name="parameters" element="tns:releaseRequestResponse"/>
  </message>
  <message name="setAsyncRequestStatusInput">
    <part name="parameters" element="tns:setAsyncRequestStatus"/>
  </message>
  <message name="setAsyncRequestStatusOutput">
    <part name="parameters" element="tns:setAsyncRequestStatusResponse"/>
  </message>
  <message name="RequestNotFoundException">
    <part name="RequestNotFoundException" element="tns:RequestNotFoundException"/>
  </message>
  <message name="cancelRequestInput">
    <part name="parameters" element="tns:cancelRequest"/>
  </message>
  <message name="cancelRequestOutput">
    <part name="parameters" element="tns:cancelRequestResponse"/>
  </message>
  <message name="deleteRequestInput">
    <part name="parameters" element="tns:deleteRequest"/>
  </message>
  <message name="deleteRequestOutput">
    <part name="parameters" element="tns:deleteRequestResponse"/>
  </message>
  <message name="purgeRequestInput">
    <part name="parameters" element="tns:purgeRequest"/>
  </message>
  <message name="purgeRequestOutput">
    <part name="parameters" element="tns:purgeRequestResponse"/>
  </message>
  <message name="setSubmitArgsInput">
    <part name="parameters" element="tns:setSubmitArgs"/>
  </message>
  <message name="setSubmitArgsOutput">
    <part name="parameters" element="tns:setSubmitArgsResponse"/>
  </message>
  <message name="IllegalArgumentException">
    <part name="IllegalArgumentException" element="tns:IllegalArgumentException"/>
  </message>
  <message name="setStepsArgsInput">
    <part name="parameters" element="tns:setStepsArgs"/>
  </message>
  <message name="setStepsArgsOutput">
    <part name="parameters" element="tns:setStepsArgsResponse"/>
  </message>
  <message name="addPPActionsInput">
    <part name="parameters" element="tns:addPPActions"/>
  </message>
  <message name="addPPActionsOutput">
    <part name="parameters" element="tns:addPPActionsResponse"/>
  </message>
  <message name="setNLSOptionsInput">
    <part name="parameters" element="tns:setNLSOptions"/>
  </message>
  <message name="setNLSOptionsOutput">
    <part name="parameters" element="tns:setNLSOptionsResponse"/>
  </message>
  <message name="onJobCompletionInput">
    <part name="parameters" element="tns:onJobCompletion"/>
  </message>
  <portType name="ESSWebService">
    <operation name="submitRequest">
      <input message="tns:submitRequestInput" ns1:Action="submitRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:submitRequestOutput" ns1:Action="submitRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="ValidationException" message="tns:ValidationException"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="submitRecurringRequest">
      <input message="tns:submitRecurringRequestInput" ns1:Action="submitRecurringRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:submitRecurringRequestOutput" ns1:Action="submitRecurringRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="ValidationException" message="tns:ValidationException"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="getCompletionStatus">
      <input message="tns:getCompletionStatusInput" ns1:Action="getCompletionStatus" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
    </operation>
    <operation name="getRequestState">
      <input message="tns:getRequestStateInput" ns1:Action="getRequestState" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:getRequestStateOutput" ns1:Action="getRequestState" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="getRequestDetail">
      <input message="tns:getRequestDetailInput" ns1:Action="getRequestDetail" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:getRequestDetailOutput" ns1:Action="getRequestDetail" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="getRequestExecutionContext">
      <input message="tns:getRequestExecutionContextInput" ns1:Action="getRequestExecutionContext" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:getRequestExecutionContextOutput" ns1:Action="getRequestExecutionContext" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="holdRequest">
      <input message="tns:holdRequestInput" ns1:Action="holdRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:holdRequestOutput" ns1:Action="holdRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="NotAllowedException" message="tns:NotAllowedException"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="IllegalStateException" message="tns:IllegalStateException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="releaseRequest">
      <input message="tns:releaseRequestInput" ns1:Action="releaseRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:releaseRequestOutput" ns1:Action="releaseRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="IllegalStateException" message="tns:IllegalStateException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="setAsyncRequestStatus">
      <input message="tns:setAsyncRequestStatusInput" ns1:Action="setAsyncRequestStatus" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:setAsyncRequestStatusOutput" ns1:Action="setAsyncRequestStatus" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="RequestNotFoundException" message="tns:RequestNotFoundException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="cancelRequest">
      <input message="tns:cancelRequestInput" ns1:Action="cancelRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:cancelRequestOutput" ns1:Action="cancelRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="IllegalStateException" message="tns:IllegalStateException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="deleteRequest">
      <input message="tns:deleteRequestInput" ns1:Action="deleteRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:deleteRequestOutput" ns1:Action="deleteRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="NotAllowedException" message="tns:NotAllowedException"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="IllegalStateException" message="tns:IllegalStateException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="purgeRequest">
      <input message="tns:purgeRequestInput" ns1:Action="purgeRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:purgeRequestOutput" ns1:Action="purgeRequest" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="NotAllowedException" message="tns:NotAllowedException"/>
      <fault name="NotFoundException" message="tns:NotFoundException"/>
      <fault name="IllegalStateException" message="tns:IllegalStateException"/>
      <fault name="RuntimeServiceException" message="tns:RuntimeServiceException"/>
    </operation>
    <operation name="setSubmitArgs">
      <input message="tns:setSubmitArgsInput" ns1:Action="setSubmitArgs" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:setSubmitArgsOutput" ns1:Action="setSubmitArgs" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="IllegalArgumentException" message="tns:IllegalArgumentException"/>
    </operation>
    <operation name="setStepsArgs">
      <input message="tns:setStepsArgsInput" ns1:Action="setStepsArgs" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:setStepsArgsOutput" ns1:Action="setStepsArgs" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="IllegalArgumentException" message="tns:IllegalArgumentException"/>
    </operation>
    <operation name="addPPActions">
      <input message="tns:addPPActionsInput" ns1:Action="addPPActions" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:addPPActionsOutput" ns1:Action="addPPActions" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="IllegalArgumentException" message="tns:IllegalArgumentException"/>
    </operation>
    <operation name="setNLSOptions">
      <input message="tns:setNLSOptionsInput" ns1:Action="setNLSOptions" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <output message="tns:setNLSOptionsOutput" ns1:Action="setNLSOptions" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
      <fault name="IllegalArgumentException" message="tns:IllegalArgumentException"/>
    </operation>
  </portType>
  <portType name="ESSWebServiceCallback">
    <operation name="onJobCompletion">
      <input message="tns:onJobCompletionInput" ns1:Action="http://xmlns.oracle.com/scheduler/ESSWebService/getCompletionStatus/Response" xmlns:ns1="http://www.w3.org/2006/05/addressing/wsdl"/>
    </operation>
  </portType>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://soa2admin2.example.com:7001/ess/esswebservice?XSD=ESSTypes.xsd</con:url><con:content><![CDATA[<xs:schema version="1.0" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://xmlns.oracle.com/scheduler/types" xmlns:tns="http://xmlns.oracle.com/scheduler/types" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:complexType name="metadataObjectId">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="packageName" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="type" type="tns:metadataObjectType" minOccurs="0" form="qualified"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="postProcessAction">
    <xs:sequence>
      <xs:element name="actionName" type="xs:string" minOccurs="0"/>
      <xs:element name="actionOrder" type="xs:int"/>
      <xs:element name="arguments" type="xs:string" nillable="true" minOccurs="0" maxOccurs="100"/>
      <xs:element name="fileMgmtGroup" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="onError" type="xs:boolean"/>
      <xs:element name="onSuccess" type="xs:boolean"/>
      <xs:element name="onWarning" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="nlsOptions">
    <xs:sequence>
      <xs:element name="language" type="xs:string" minOccurs="0"/>
      <xs:element name="numericCharacters" type="xs:string" minOccurs="0"/>
      <xs:element name="territory" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestParameters">
    <xs:sequence>
      <xs:element name="parameter" type="tns:requestParameter" nillable="true" minOccurs="0" maxOccurs="1000" form="qualified"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestParameter">
    <xs:sequence>
      <xs:element name="dataType" type="tns:dataType" minOccurs="0" form="qualified"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="scope" type="xs:string" minOccurs="0"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestExecutionContext">
    <xs:sequence>
      <xs:element name="requestId" type="xs:long"/>
      <xs:element name="requestHandle" type="xs:string"/>
      <xs:element name="pausedState" type="xs:string"/>
      <xs:element name="resumed" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="stepArgs">
    <xs:sequence>
      <xs:element name="arguments" type="xs:string" nillable="true" minOccurs="0" maxOccurs="100"/>
      <xs:element name="NLSOptions" type="tns:nlsOptions" minOccurs="0" form="qualified"/>
      <xs:element name="PPActions" type="tns:postProcessAction" nillable="true" minOccurs="0" maxOccurs="100" form="qualified"/>
      <xs:element name="stepPath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="requestDetail">
    <xs:sequence>
      <xs:element name="actualEndTime" type="xs:dateTime" minOccurs="0" form="qualified"/>
      <xs:element name="actualStartTime" type="xs:dateTime" minOccurs="0" form="qualified"/>
      <xs:element name="cause" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="description" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="dispatcherNode" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="expirationTime" type="xs:dateTime" minOccurs="0" form="qualified"/>
      <xs:element name="isCancellable" type="xs:boolean" form="qualified"/>
      <xs:element name="isHoldable" type="xs:boolean" form="qualified"/>
      <xs:element name="jobDefinitionId" type="tns:metadataObjectId" minOccurs="0" form="qualified"/>
      <xs:element name="parentRequestId" type="xs:long" form="qualified"/>
      <xs:element name="priority" type="xs:int" form="qualified"/>
      <xs:element name="processorNode" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="requestId" type="xs:long" form="qualified"/>
      <xs:element name="requestParameters" type="tns:requestParameters" minOccurs="0" form="qualified"/>
      <xs:element name="requestedEndTime" type="xs:dateTime" minOccurs="0" form="qualified"/>
      <xs:element name="requestedStartTime" type="xs:dateTime" minOccurs="0" form="qualified"/>
      <xs:element name="retried" type="xs:int" form="qualified"/>
      <xs:element name="scheduleId" type="tns:metadataObjectId" minOccurs="0" form="qualified"/>
      <xs:element name="scheduledTime" type="xs:dateTime" minOccurs="0" form="qualified"/>
      <xs:element name="state" type="tns:state" minOccurs="0" form="qualified"/>
      <xs:element name="errorType" type="tns:errorType" minOccurs="0" form="qualified"/>
      <xs:element name="stepId" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="submissionTime" type="xs:dateTime" minOccurs="0" form="qualified"/>
      <xs:element name="submitter" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="runAsUser" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="triggerId" type="tns:metadataObjectId" minOccurs="0" form="qualified"/>
      <xs:element name="workAssignmentId" type="tns:metadataObjectId" minOccurs="0" form="qualified"/>
      <xs:element name="workshiftId" type="tns:metadataObjectId" minOccurs="0" form="qualified"/>
      <xs:element name="requestType" type="tns:requestType" minOccurs="0" form="qualified"/>
      <xs:element name="errorWarningMessage" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="errorWarningTime" type="xs:dateTime" minOccurs="0" form="qualified"/>
      <xs:element name="errorWarningDetail" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="ecid" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="processPhase" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="submitterDmsEcid" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="submitterDmsRid" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="submitterFlowId" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="flowId" type="xs:string" minOccurs="0" form="qualified"/>
      <xs:element name="dmsRid" type="xs:string" minOccurs="0" form="qualified"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="metadataObjectType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="JOB_TYPE"/>
      <xs:enumeration value="JOB_DEFINITION"/>
      <xs:enumeration value="JOB_SET"/>
      <xs:enumeration value="INCOMPATIBILITY"/>
      <xs:enumeration value="SCHEDULE_DEFINITION"/>
      <xs:enumeration value="EXCLUSION_DEFINITION"/>
      <xs:enumeration value="TRIGGER"/>
      <xs:enumeration value="WORKSHIFT"/>
      <xs:enumeration value="WORK_ASSIGNMENT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="state">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="WAIT"/>
      <xs:enumeration value="READY"/>
      <xs:enumeration value="RUNNING"/>
      <xs:enumeration value="COMPLETED"/>
      <xs:enumeration value="BLOCKED"/>
      <xs:enumeration value="HOLD"/>
      <xs:enumeration value="CANCELLING"/>
      <xs:enumeration value="EXPIRED"/>
      <xs:enumeration value="CANCELLED"/>
      <xs:enumeration value="ERROR"/>
      <xs:enumeration value="WARNING"/>
      <xs:enumeration value="SUCCEEDED"/>
      <xs:enumeration value="PAUSED"/>
      <xs:enumeration value="PENDING_VALIDATION"/>
      <xs:enumeration value="VALIDATION_FAILED"/>
      <xs:enumeration value="SCHEDULE_ENDED"/>
      <xs:enumeration value="FINISHED"/>
      <xs:enumeration value="ERROR_AUTO_RETRY"/>
      <xs:enumeration value="ERROR_MANUAL_RECOVERY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="errorType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="SYSTEM"/>
      <xs:enumeration value="BUSINESS"/>
      <xs:enumeration value="TIMEOUT"/>
      <xs:enumeration value="MIXED_NON_BUSINESS"/>
      <xs:enumeration value="MIXED_BUSINESS"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dataType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="STRING"/>
      <xs:enumeration value="INTEGER"/>
      <xs:enumeration value="LONG"/>
      <xs:enumeration value="BOOLEAN"/>
      <xs:enumeration value="DATETIME"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="requestType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="SINGLETON"/>
      <xs:enumeration value="RECUR_PARENT"/>
      <xs:enumeration value="RECUR_CHILD"/>
      <xs:enumeration value="JOBSET_SINGLETON"/>
      <xs:enumeration value="JOBSET_STEP"/>
      <xs:enumeration value="JOBSET_RECUR_PARENT"/>
      <xs:enumeration value="JOBSET_RECUR_CHILD"/>
      <xs:enumeration value="SUB_REQUEST"/>
      <xs:enumeration value="UNVALIDATED_REQUEST"/>
      <xs:enumeration value="UNVALIDATED_SUB_REQUEST"/>
      <xs:enumeration value="TRIGGER_CHILD"/>
      <xs:enumeration value="JOBSET_TRIGGER_CHILD"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="asyncStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SUCCESS"/>
      <xs:enumeration value="PAUSE"/>
      <xs:enumeration value="CANCEL"/>
      <xs:enumeration value="WARNING"/>
      <xs:enumeration value="ERROR"/>
      <xs:enumeration value="UPDATE"/>
      <xs:enumeration value="BIZ_ERROR"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="processPhase">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Unknown"/>
      <xs:enumeration value="Undefined"/>
      <xs:enumeration value="Initial"/>
      <xs:enumeration value="JobSetInitial"/>
      <xs:enumeration value="PreProcessStart"/>
      <xs:enumeration value="PreProcessDelayed"/>
      <xs:enumeration value="PreProcessComplete"/>
      <xs:enumeration value="ExecuteInitiate"/>
      <xs:enumeration value="ExecuteInitiateComplete"/>
      <xs:enumeration value="ExecuteAsyncWait"/>
      <xs:enumeration value="ExecuteFinalize"/>
      <xs:enumeration value="ExecuteFinalizeAsync"/>
      <xs:enumeration value="ExecuteFinalizeComplete"/>
      <xs:enumeration value="ExecutePaused"/>
      <xs:enumeration value="PostProcessStart"/>
      <xs:enumeration value="PostProcessDelayed"/>
      <xs:enumeration value="PostProcessComplete"/>
      <xs:enumeration value="ProcessExecuteComplete"/>
      <xs:enumeration value="JobSetInitial"/>
      <xs:enumeration value="ProcessSetupReady"/>
      <xs:enumeration value="ExecutePausedWaitForSubreq"/>
      <xs:enumeration value="ExecuteAsyncReceived"/>
      <xs:enumeration value="JobSetExecuteStepsWait"/>
      <xs:enumeration value="PostExecuteStart"/>
      <xs:enumeration value="PostExecuteWaitForSubreq"/>
      <xs:enumeration value="PostExecuteTerminalComplete"/>
      <xs:enumeration value="PostExecuteComplete"/>
      <xs:enumeration value="Complete"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>REPLACE_WITH_ACTUAL_URL</con:endpoint></con:endpoints><con:operation isOneWay="false" action="onJobCompletion" name="onJobCompletion" bindingOperationName="onJobCompletion" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" useWsAddressing="true"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>REPLACE_WITH_ACTUAL_URL</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://xmlns.oracle.com/scheduler">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:onJobCompletion>
         <requestId>?</requestId>
         <!--Optional:-->
         <state>?</state>
         <resultMessage>?</resultMessage>
      </sch:onJobCompletion>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="onJobCompletion"/></con:call></con:operation></con:interface><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/></con:soapui-project>